{"version":3,"sources":["panels/Items/presenter.js","panels/Items/index.js","panels/Home.js","panels/Card/presenter.js","panels/Card/index.js","App.js","index.js"],"names":["getType","type","getAdmin","level","Items","items","go","title","get","response","map","it","index","key","id","expandable","onClick","data-to","before","src","photo_50","indicator","is_admin","admin_level","size","description","className","width","height","fill","members_count","bottomContent","name","Home","fetchedGroups","osName","platform","Card","props","left","IOS","App","useState","activePanel","setActivePanel","fetchedUser","setUser","setGroups","popout","setPopout","useEffect","a","connect","sendPromise","user","app_id","scope","token","method","request_id","params","user_id","extended","fields","v","access_token","groups","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","console","log","send","ReactDOM","render","getElementById"],"mappings":"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","file":"vk-stats/static/js/main.1be89029.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { get } from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport { Group, List, Avatar, Cell, Counter } from \"@vkontakte/vkui\";\nimport Icon20UserOutline from \"@vkontakte/icons/dist/20/user_outline\";\n\nfunction getType(type) {\n  switch (type) {\n    case \"group\":\n      return \"Группа\";\n    case \"page\":\n      return \"Публичная страница\";\n    default:\n      return \"Мероприятие\";\n  }\n}\n\nfunction getAdmin(level) {\n  switch (level) {\n    case 1:\n      return \"Вы модератор\";\n    case 2:\n      return \"Вы редактор\";\n    default:\n      return \"Вы администратор\";\n  }\n}\n\nconst Presenter = ({ items, go, title }) => (\n  <Group title={title}>\n    <List>\n      {get(items, \"response.items.length\") > 0 &&\n        items.response.items.map((it, index) => (\n          <Cell\n            key={`${it.id}_${index}`}\n            expandable\n            onClick={go}\n            data-to=\"card\"\n            before={<Avatar src={it.photo_50} />}\n            indicator={\n              <Fragment>\n                {it.is_admin === 1 ? (\n                  <Counter type=\"prominent\">{getAdmin(it.admin_level)}</Counter>\n                ) : (\n                  <Counter>Вы участник</Counter>\n                )}\n              </Fragment>\n            }\n            size=\"l\"\n            description={\n              <Fragment>\n                {getType(it.type)}\n                <div className={\"flex ai_c indent_t_5\"}>\n                  <Icon20UserOutline width={16} height={16} fill={\"#99b1c6\"} />\n                  <span>{it.members_count}</span>\n                </div>\n              </Fragment>\n            }\n            bottomContent={<div />}\n          >\n            {it.name}\n          </Cell>\n        ))}\n    </List>\n  </Group>\n);\n\nPresenter.propTypes = {\n  title: PropTypes.string,\n  go: PropTypes.func.isRequired,\n  items: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    photo_50: PropTypes.string,\n    name: PropTypes.string,\n    screen_name: PropTypes.string,\n    is_admin: PropTypes.number,\n    members_count: PropTypes.number\n  })\n};\n\nexport default Presenter;\n","import Presenter from \"./presenter\";\n\nconst Items = Presenter;\nexport default Items;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\n\nimport Items from \"./Items/\";\n\nconst Home = ({ id, go, fetchedGroups }) => (\n  <Panel id={id}>\n    <PanelHeader>Статистика Вконтакте</PanelHeader>\n    {fetchedGroups && (\n      <Items items={fetchedGroups} title={\"Мои группы\"} go={go} />\n    )}\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string\n    })\n  })\n};\n\nexport default Home;\n","import React  from \"react\";\n\n\nimport { IOS, PanelHeader, Panel, platform} from \"@vkontakte/vkui\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport HeaderButton from \"@vkontakte/vkui/dist/components/HeaderButton/HeaderButton\";\nimport PropTypes from \"prop-types\";\n\n\nconst osName = platform();\n\nconst Presenter = props => (\n    <Panel id={props.id}>\n      <PanelHeader\n          left={<HeaderButton onClick={props.go} data-to=\"home\">\n            {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n          </HeaderButton>}\n      >\n        Persik\n      </PanelHeader>\n      sssss\n    </Panel>\n);\n\nPresenter.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n};\n\nexport default Presenter;\n","import Presenter from \"./presenter\";\n\nconst Card = Presenter;\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vk-connect\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Card from \"./panels/Card\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [fetchedGroups, setGroups] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      const token = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n        app_id: 7178535,\n        scope: \"groups,stats\"\n      });\n      const groups = await connect.sendPromise(\"VKWebAppCallAPIMethod\", {\n        method: \"groups.get\",\n        request_id: \"groupsUser\",\n        params: {\n          user_id: user.id,\n          extended: \"1\",\n          fields:\n            \"id,is_admin,admin_level,name,photo_50,screen_name,type,members_count\",\n          v: \"5.102\",\n          access_token: token.access_token\n        }\n      });\n      setUser(user);\n      setGroups(groups);\n\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n    console.log('s')\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home\n        id=\"home\"\n        fetchedUser={fetchedUser}\n        fetchedGroups={fetchedGroups}\n        go={go}\n      />\n      <Card id=\"card\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport './styles/style.css';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
